# 击败100%
class Solution(object):
    def strongPasswordChecker(self, s):
        divide = [0, 0, 0]
        repeat = 0
        noLower = 1
        noUpper = 1
        noDigit = 1
        for ch in s:
            if noLower:
                if ch.islower():
                    noLower = 0
            if noUpper:
                if ch.isupper():
                    noUpper = 0
            if noDigit:
                if ch.isdigit():
                    noDigit = 0
        remain = noLower + noUpper + noDigit
        sup = 6 - len(s) if len(s) < 6 else 0
        if sup:
            return max(sup, remain)
        delete = len(s) - 20 if len(s) > 20 else 0
        times = delete
        count = 0
        his = s[0]
        s += chr(ord(s[-1])+1)
        for ch in s:
            if ch == his:
                count += 1
            else:
                if count >= 3:
                    divide[count%3] += 1
                    repeat += count
                count = 1
            his = ch

        for i in range(divide[0]):
            if times:
                times -= 1
                repeat -= 3
            else:
                rep = int(repeat/3)
                return delete + rep if rep > remain else delete + remain
        for i in range(divide[1]):
            if times >= 2:
                times -= 2
                repeat -= 4
            else:
                rep = int(repeat/3)
                return delete + rep if rep > remain else delete + remain
        rep = int((repeat-divide[2]*2)/3) - int(times/3)
        return delete + rep if rep > remain else delete + remain
