class Solution(object):
    def strongPasswordChecker(self, s):
        noLower = s.upper() == s
        noUpper = s.lower() == s
        noDigit = not any([ch.isdigit() for ch in s])
        delete = 0 if len(s) <= 20 else len(s) - 20
        replace = noUpper + noDigit + noLower
        if len(s) <= 4:
            return max(replace, 6-len(s))
        times = delete
        add = 0 if len(s) >= 6 else 6 - len(s)
        his = s[0]
        count = 0
        repets = [float('inf')]
        s += chr(ord(s[-1])+1)
        for ch in s:
            if ch == his:
                count += 1
            else:
                if count >= 3:
                    # 可以使用的delete次数
                    if times:
                        if count % 3 == 0:
                            count -= 1
                            times -= 1
                    repets.append(count)
                count = 1
            his = ch
        if add:
            if add >= replace:
                return add
            else:
                return max(replace, add)
        repets.sort(reverse=True)
        for i in range(1, len(repets)):
            if times >= 2:
                if repets[i] % 3 == 1:
                    times -= 2
                    repets[i] -= 2
        while times >= repets[-1]-2:
            times -= repets.pop()-2
        rep = sum([int(r/3) for r in repets[1:]])
        return rep + delete if rep > replace else replace + delete
