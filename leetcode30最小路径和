class Solution:
    def minPathSum(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        column = len(grid)
        row = len(grid[0])
        # 使用双目运算符会变慢（40ms -> 48ms）
        for i in range(1, column):
            grid[i][0] = grid[i][0] + grid[i-1][0]
        for j in range(1, row):
            grid[0][j] = grid[0][j] + grid[0][j-1]

        for i in range(1, column):
            for j in range(1, row):
                grid[i][j] = grid[i][j] + min(grid[i-1][j], grid[i][j-1])

        return grid[-1][-1]


# 比我更快的
class Solution:
    def minPathSum(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        ans = grid[0]
        for j in range(1, len(ans)):
            ans[j] = ans[j-1] + ans[j]
        for i in range(1, len(grid)):
            ans[0] += grid[i][0]
            for j in range(1, len(ans)):
                ans[j] = min(ans[j-1], ans[j]) + grid[i][j]
        return ans[-1]
